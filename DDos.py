#-------------------------------------------------#

# Obfuscate By Mr.GamingThanks To Black Coder Crush

# github  : https://github.com/clayhacker-max

# from Linux

# localhost : aarch64

# key : Asep-oH6lN8gB2lY6dA8

# date : Thu Jul 15 20:27:01 2021

#-------------------------------------------------#

#Compile By DNMODZ

#My Team : Black Coder Crush

import base64

exec(base64.b64decode(""))
